
# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build, Test, and Push Docker Image to Azure Container Registry

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_33BC796571494326AEBF6DEC1FFD28B3 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AEE2666CC32945A39ED2F99C415A359D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C7C4A16EEBD048AE90053A3AEBE4134F }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_REPO }}:latest .

      - name: Run database migrations
        run: |
          docker run --rm \
            -e ENV=production \
            -e DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
            -e DB_NAME="${{ secrets.DB_NAME }}" \
            -e DB_USER="${{ secrets.DB_USER }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e DB_HOST="${{ secrets.DB_HOST }}" \
            -e DB_PORT=5432 \
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_REPO }}:latest \
            python manage.py migrate

      - name: Create Django superuser (one-time)
        run: |
          docker run --rm \
            -e ENV=production \
            -e DJANGO_SUPERUSER_USERNAME=${{ secrets.SUPERUSER_NAME }} \
            -e DJANGO_SUPERUSER_EMAIL=${{ secrets.SUPERUSER_EMAIL }} \
            -e DJANGO_SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }} \
            -e DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
            -e DB_NAME="${{ secrets.DB_NAME }}" \
            -e DB_USER="${{ secrets.DB_USER }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e DB_HOST="${{ secrets.DB_HOST }}" \
            -e DB_PORT=5432 \
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_REPO }}:latest \
            python manage.py createsuperuser --noinput

      - name: Collect static files
        run: |
          docker run --rm ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_REPO }}:latest python manage.py collectstatic --noinput
        env:
          ENV: production
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

      - name: Push image to ACR
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_REPO }}:latest